<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TW</name>
    </assembly>
    <members>
        <member name="M:TW.Controllers.CategoriaController.GetListCat(System.String,System.Boolean)">
            <summary>
            Método que lista, busca e ordena categorias.
            </summary>
            <returns>Retorna uma lista, uma busca e um tipo de ordenação para categorias.</returns>
        </member>
        <member name="M:TW.Controllers.CategoriaController.PostCat(TW.Models.Categoria)">
            <summary>
            Método que cadastra uma categoria.
            </summary>
            <param name="categoria">Envia uma categoria.</param>
            <returns>Retorna uma categoria cadastrada.</returns>
        </member>
        <member name="M:TW.Controllers.CategoriaController.PutStatusCategoria(System.Int32)">
            <summary>
            Método para atualizar o status da categoria para false.
            </summary>
            <param name="id">Envia um id da categoria.</param>
            <returns>Retorna a categoria atualizado.</returns>
        </member>
        <member name="M:TW.Controllers.ClassificadoController.GetHome(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Método para buscar a lista de classificados com seus respectivos nomes, imagens e preços para a barra de busca e para os filtros da home page.
            </summary>
            <param name="busca">Envia um valor para busca.</param>
            <param name="marca">Envia uma marca.</param>
            <param name="categoria">Envia uma categoria.</param>
            <param name="ordenacao">Envia um estado true para ordenar Crescente e false para ordenar decrescente.</param>
            <returns>Retorna a lista de classificados com seus respectivos nomes, imagens e preços para a barra de busca e para os filtros da home page.</returns>
        </member>
        <member name="M:TW.Controllers.ClassificadoController.GetAdm(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Método que lista, busca e ordena Classificados.
            </summary>
            <param name="busca">Envia um valor para busca.</param>
            <param name="ordNomeE">Envia um estado true para ordenar de A-Z ou falta para Z-A.</param>
            <param name="ordCodClass">Envia um estado true para ordenar de A-Z ou falta para Z-A.</param>
            <param name="ordNumSerie">Envia um estado true para ordenar de A-Z ou falta para Z-A.</param>
            <returns>Retorna uma lista, uma busca e um tipo de ordenação para classificados.</returns>
        </member>
        <member name="M:TW.Controllers.ClassificadoController.GetProductClassificado(System.Int32)">
            <summary>
            Método para buscar um classificado específico com todas as informações (Equipamento,Imagens).
            </summary>
            <param name="id">Envia um id.</param>
            <returns>Retorna um classificado específico com todas as informações (Equipamento,Imagens).</returns>
        </member>
        <member name="M:TW.Controllers.ClassificadoController.PostClassificado(TW.Models.Classificado)">
            <summary>
            Método para cadastrar um classificado com no mínimo uma imagem.
            </summary>
            <param name="classificado">Envia uma classificado.</param>
            <returns>Retorna o classificado cadastrado.</returns>
        </member>
        <member name="M:TW.Controllers.ClassificadoController.PutStatusClassificado(System.Int32)">
            <summary>
            Método para atualizar o status do classificado para false.
            </summary>
            <param name="id">Envia um id do classificado.</param>
            <returns>Retorna a categoria atualizado.</returns>
        </member>
        <member name="M:TW.Controllers.EquipamentoController.GetListEqui(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Método que lista, busca e ordena equipamentos.
            </summary>
            <param name="busca">Envia um valor para busca.</param>
            <param name="ordNomeE">Envia um estado true para ordenar de A-Z ou false para Z-A.</param>
            <param name="ordMarca">Envia um estado true para ordenar de A-Z ou false para Z-A.</param>
            <param name="ordMem">Envia um estado true para ordenar de A-Z ou falta para Z-A.</param>
            <param name="ordModelo">Envia um estado true para ordenar de A-Z ou falta para Z-A.</param>
            <param name="ordSO">Envia um estado true para ordenar de A-Z ou falta para Z-A.</param>
            <param name="ordPol">Envia um estado true para ordenar de A-Z ou falta para Z-A.</param>
            <param name="ordPeso">Envia um estado true para ordenar de A-Z ou falta para Z-A.</param>
            <param name="ordPvideo">Envia um estado true para ordenar de A-Z ou falta para Z-A.</param>
            <param name="ordProc">Envia um estado true para ordenar de A-Z ou falta para Z-A.</param>
            <param name="ordHd">Envia um estado true para ordenar de A-Z ou falta para Z-A.</param>
            <param name="ordSsd">Envia um estado true para ordenar de A-Z ou falta para Z-A.</param>
            <returns>Retorna uma lista, uma busca e um tipo de ordenação para equipamentos.</returns>
        </member>
        <member name="M:TW.Controllers.EquipamentoController.GetidEqui(System.Int32)">
            <summary>
            Método que busca um equipamento por id.
            </summary>
            <param name="id">Envia um id.</param>
            <returns>Retorna um equipamento.</returns>
        </member>
        <member name="M:TW.Controllers.EquipamentoController.PostEqui(TW.Models.Equipamento)">
            <summary>
            Método para cadastrar equipamentos.
            </summary>
            <param name="equipamento">Envia um equipamento.</param>
            <returns>Retorna o equipamento recém cadastrado.</returns>
        </member>
        <member name="M:TW.Controllers.EquipamentoController.PutStatusEquipamento(System.Int32)">
            <summary>
            Método para atualizar o status do equipamento para false.
            </summary>
            <param name="id">Envia um id do equipamento.</param>
            <returns>Retorna o equipamento atualizado.</returns>
        </member>
        <member name="M:TW.Controllers.InteresseController.GetListInteresse">
            <summary>
            Método que lista os interesses do usuário logado.
            </summary>
            <returns>Retorna a lista dos interesses do usuário logado.</returns>
        </member>
        <member name="M:TW.Controllers.InteresseController.PostInteresse(TW.Models.Interesse)">
            <summary>
            Método para Cadastrar o interesse do usuário logado.
            </summary>
            <param name="interesse">envia o interesse.</param>
            <returns>Retorna o interesse do usuário logado.</returns>
        </member>
        <member name="M:TW.Controllers.InteresseController.PutStatusInteresse(System.Int32)">
            <summary>
            Método para atualizar o status do interesse para false.
            </summary>
            <param name="id">Envia um id do interesse.</param>
            <returns>Retorna o interesse atualizado.</returns>
        </member>
        <member name="M:TW.Controllers.LoginController.PostLogin(TW.ViewModel.LoginViewModel)">
            <summary>
            Método de logar no sistema.
            </summary>
            <param name="login">Envia o email e a senha.</param>
            <returns>Retorna o token de acesso.</returns>
        </member>
        <member name="M:TW.Controllers.UsuarioController.GetDashUser(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Método para listar, buscar e filtrar dados de usuários registrados no sistema.
            </summary>
            <param name="busca">Envia um valor para busca.</param>
            <param name="ordNomeC">Envia um estado true para ordenar de A-Z e false para Z-A.</param>
            <param name="ordNomeU">Envia um estado true para ordenar de A-Z e false para Z-A.</param>
            <param name="ordEmail">Envia um estado true para ordenar de A-Z e false para Z-A.</param>
            <returns>Retorna uma lista, uma busca e um tipo de ordenação para usuários.</returns>
        </member>
        <member name="M:TW.Controllers.UsuarioController.GetUser">
            <summary>
            Método para buscar dados do usuário logado.
            </summary>
            <returns>Retorna os dados do usuário logado.</returns>
        </member>
        <member name="M:TW.Controllers.UsuarioController.ChangePassword(TW.ViewModel.PasswordUpdateViewModel)">
            <summary>
            Método para atualizar a senha do usuário.
            </summary>
            <param name="model">Envia a senha que seja ser atualizada.</param>
            <returns>Retorna a senha do usuário atualizada.</returns>
        </member>
        <member name="M:TW.Controllers.UsuarioController.PostForgotPassword(TW.ViewModel.ForgotPasswordViewModel)">
            <summary>
            Método para enviar um email com uma nova senha para o usuário que à esqueceu.
            </summary>
            <param name="verificacao">Envia o nome completo e o email do usuário.</param>
            <returns>Retorna os dados do usuário com uma nova senha.</returns>
        </member>
        <member name="M:TW.Controllers.UsuarioController.PostUser(TW.Models.Usuario)">
            <summary>
            Método para cadastrar usuário comum ou administrador no sistema.
            </summary>
            <param name="usuario">Envia nome completo, nome de usuário, email e senha.</param>
            <returns>Retorna os dados do usuário recém cadastrado.</returns>
        </member>
        <member name="M:TW.Controllers.UsuarioController.PutUserImage">
            <summary>
            Método para atualizar a imagem do usuário logado.
            </summary>
            <returns>Atualiza a imagem do usuário logado.</returns>
        </member>
        <member name="M:TW.Controllers.UsuarioController.PutStatusUsuario(System.Int32)">
            <summary>
            Método para atualizar o status do usuario para false.
            </summary>
            <param name="id">Envia um id do usuario.</param>
            <returns>Retorna o usuario atualizado.</returns>
        </member>
    </members>
</doc>
